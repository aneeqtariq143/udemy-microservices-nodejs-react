# This file is used to create a deployment for the auth service
apiVersion: apps/v1
# Kind is the type of resource we are creating
kind: Deployment
# Metadata is data about the resource
metadata:
  # Name is the name of the resource
  name: nats-depl
# Spec is the configuration of the resource
spec:
  # Replicas is the number of pods we want to run
  replicas: 1
  # Selector is used to select which pods this deployment is going to manage
  selector:
    matchLabels:
      # app: auth is the label of the pods
      app: nats
  # Template is the configuration of the pods
  template:
    metadata:
      # Labels is the labels of the pods
      labels:
        # app: auth is the label of the pods
        app: nats
      # Spec is the configuration of the containers
    spec:
      containers:
        # - name is the name of the container
        - name: nats
          # Image is the image of the container
          image: nats-streaming:0.17.0
          args: [
            "-p",
            "4222",
            "-m",
            "8222",
            "-hbi",
            "5s",
            "-hbt",
            "5s",
            "-hbf",
            "2",
            "-SD",
            "-cid",
            "ticketing", # Cluster ID which will be used to connect to the nats server from the microservices
          ]
          # Readiness Probe to check if NATS Streaming server is ready to accept connections
          readinessProbe:
              # TCP socket probe checks if the specified port is open and accepting connections
              tcpSocket:
                port: 4222  # Port to check for readiness
              initialDelaySeconds: 15  # Time to wait before starting the first probe
              periodSeconds: 10         # Frequency of probe execution
              timeoutSeconds: 5         # Timeout for each probe attempt
              failureThreshold: 3       # Number of consecutive failures before marking the pod as not ready
              # Benefits:
              # - Ensures that the NATS server is fully operational before routing traffic to it
              # - Prevents the application from sending requests to an unready NATS server

            # Liveness Probe to ensure the NATS Streaming server is running and responsive
          livenessProbe:
              # TCP socket probe checks if the specified port is open and accepting connections
              tcpSocket:
                port: 4222  # Port to check for liveness
              initialDelaySeconds: 60  # Time to wait before starting the first liveness probe
              periodSeconds: 30         # Frequency of probe execution
              timeoutSeconds: 5         # Timeout for each probe attempt
              failureThreshold: 3       # Number of consecutive failures before restarting the container
              # Benefits:
              # - Detects and recovers from situations where the NATS server becomes unresponsive
              # - Ensures high availability by automatically restarting unhealthy pods
---
# apiVersion is the version of the API
apiVersion: v1
# Kind is the type of resource we are creating
kind: Service
# Metadata is data about the resource
metadata:
  # Name is the name of the resource
  name: nats-srv
# Spec is the configuration of the resource
spec:
  # Selector is used to select which pods this service is going to route traffic to
  selector:
    # app: auth is the label of the pods
    app: nats
  # Ports is the list of ports
  ports:
    - name: nats-client
      # - protocol is the protocol of the port
      protocol: TCP
      # port is the port of the service
      port: 4222
      # targetPort is the port of the pods
      targetPort: 4222
    - name: nats-monitoring
      # - protocol is the protocol of the port
      protocol: TCP
      # port is the port of the service
      port: 8222
      # targetPort is the port of the pods
      targetPort: 8222
